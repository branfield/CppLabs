/* ВАРИАНТ 2.

Описать структуру с именем aeroflot, содержащую следующие поля:
• название пункта назначения рейса;
• номер рейса (число);
• тип самолета.

Написать программу, выполняющую следующие действия:
• ввод с клавиатуры данных в массив, состоящий из максимум 7 элементов типа aeroflot,
причем сделать возможность прервать ввод, чтобы можно было не вводить все 7 элементов;
после окончания ввода отсортировать элементы массива по возрастанию номера рейса;
• вывод в консоль номеров рейсов и типов самолетов, вылетающих в пункт назначения,
название которого совпало с названием, введенным с клавиатуры;
• если таких рейсов нет, вывести соответствующее сообщение;
• реализовать вторую версию программы, вместо массива использовать двусвязный список;
элементы добавлять таким образом, чтобы сохранялась упорядоченность списка по номеру рейса
(вставка нового элемента после элемента, который меньше нового элемента и перед большим элементом). */


#include <iostream>
#include <cstring>
using namespace std;

struct aeroflot
{
	char *name = new char[50];
	short number;
	char *type = new char[20];
};

int main()
{
	setlocale(0, "");
	aeroflot *mas = new aeroflot[7];
	int n = 0;
	for (n = 0; n < 7; n++)
	{
		cout << "ВНИМАНИЕ!" << endl << "Для завершения ввода не забудьте поставить точку!" << endl;
		cout << "Введите название пункта назначения: ";
		cin >> mas[n].name;

		if (mas[n].name[0] == '.') break;

		cout << "Введите номер рейса: ";
		cin >> mas[n].number;

		cout << "Введите тип самолета: ";
		cin >> mas[n].type;
		n ++;
	}
	n ++;
	cout << endl << "Введите название пункта назначения: ";
	char *name2 = new char[50];
	cin >> name2;
	bool c = 0;
	for (int i = 0; i < n; i++)
	{
		if (*mas[i].name == *name2)
		{
			c = 1;
			cout << mas[i].name << " " << mas[i].number << " " << mas[i].type << endl;
		}
	}
	if (!c)
		cout << "Таких рейсов нет";
	system("pause");
	return 0;
}
